{"ast":null,"code":"var _jsxFileName = \"/home/max/Documents/UA/usabilidad-web-2025/frontend/react/src/paginas/Accesibilidad.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // O usa otro archivo de estilos si lo prefieres\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Accesibilidad() {\n  _s();\n  const [isDyslexic, setIsDyslexic] = useState(false);\n  const toggleFont = () => {\n    setIsDyslexic(!isDyslexic);\n    document.body.classList.toggle('dyslexic'); // Aplica la clase globalmente\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Accesibilidad en la tipograf\\xEDa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Esta p\\xE1gina permite cambiar la tipograf\\xEDa entre \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Inter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 57\n      }, this), \" y \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"OpenDyslexic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 82\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFont,\n      children: [\"Cambiar a \", isDyslexic ? 'Inter' : 'OpenDyslexic']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Accesibilidad, \"uR5ESRA3xtaOa8PWUZO7t+Ac9S8=\");\n_c = Accesibilidad;\nexport default Accesibilidad;\nvar _c;\n$RefreshReg$(_c, \"Accesibilidad\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Accesibilidad","_s","isDyslexic","setIsDyslexic","toggleFont","document","body","classList","toggle","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/max/Documents/UA/usabilidad-web-2025/frontend/react/src/paginas/Accesibilidad.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // O usa otro archivo de estilos si lo prefieres\n\nfunction Accesibilidad() {\n  const [isDyslexic, setIsDyslexic] = useState(false);\n\n  const toggleFont = () => {\n    setIsDyslexic(!isDyslexic);\n    document.body.classList.toggle('dyslexic'); // Aplica la clase globalmente\n  };\n\n  return (\n    <div>\n      <h1>Accesibilidad en la tipografía</h1>\n      <p>\n        Esta página permite cambiar la tipografía entre <strong>Inter</strong> y <strong>OpenDyslexic</strong>.\n      </p>\n      <button onClick={toggleFont}>\n        Cambiar a {isDyslexic ? 'Inter' : 'OpenDyslexic'}\n      </button>\n    </div>\n  );\n}\n\nexport default Accesibilidad;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBD,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCd,OAAA;MAAAU,QAAA,GAAG,wDAC+C,eAAAV,OAAA;QAAAU,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,OAAG,eAAAd,OAAA;QAAAU,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KACxG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJd,OAAA;MAAQe,OAAO,EAAEV,UAAW;MAAAK,QAAA,GAAC,YACjB,EAACP,UAAU,GAAG,OAAO,GAAG,cAAc;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACZ,EAAA,CAnBQD,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAqBtB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}